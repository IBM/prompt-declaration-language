description: Arithmetic Expressions
document:
- read: examples/arith/example1.txt
- read: examples/arith/example2.txt
- repeat:
  - "\nQuestion: "
  - def: QUESTION
    model: ibm/granite-20b-code-instruct-v1
    parameters:
      stop_sequences:
      - Answer
      include_stop_sequence: false
  - "Answer: Let's think step by step.\n"
  - repeat:
    - def: REASON_OR_CALC
      model: ibm/granite-20b-code-instruct-v1
      parameters:
        stop_sequences:
        - '<<'
        include_stop_sequence: true
    - if:
        ends_with:
          arg0: '{{{ REASON_OR_CALC }}}'
          arg1: '<<'
      then:
      - def: EXPR
        model: ibm/granite-20b-code-instruct-v1
        parameters:
          stop_sequences:
          - '='
          - "\n"
          include_stop_sequence: false
      - '= '
      - def: RESULT
        lan: python
        code:
        - result = {{{ EXPR }}}
      - ' >>'
    until:
      contains:
        arg0: '{{{ REASON_OR_CALC }}}'
        arg1: The answer is  
    
  - "\n\n"
  num_iterations: 3