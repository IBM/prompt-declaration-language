defs:
  tools:
    data:
    - type: function
      function:
        name: Calc
        description: Calculator function
        parameters:
          type: object
          properties:
            expr:
              type: string
              description: Arithmetic expression to calculate
          required:
          - expr
    - type: function
      function:
        name: Search
        description: Wikipedia search
        parameters:
          type: object
          properties:
            topic:
              type: string
              description: Topic to search
          required:
          - topic
text:
- role: system
  text: You are Granite, developed by IBM. You are a helpful AI assistant with access to the following tools. When a tool is required to answer the user's query, respond with <|tool_call|> followed by a JSON list of tools used. If a tool does not exist in the provided list of tools, notify the user that you do not have the ability to fulfill the request.
  contribute: [context]
- role: tools
  text: ${ tools }
  contribute: [context]
- text:
    |
    What profession does Nicholas Ray and Elia Kazan have in common?
    Thought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.
    Action:
    <tool_call>[{"name": "Search", "arguments": {"topic": "Nicholas Ray"}}]
    Observation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.
    Thought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.
    Action:
    <tool_call>[{"name": "Search", "arguments": {"topic": "Elia Kazan"}}]
    Observation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.
    Thought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.
    Action:
    <tool_call>[{"name": "Finish", "arguments": {"topic": "director, screenwriter, actor"}}]


    What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?
    Thought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado ...
    Action:
    <tool_call>[{"name": "Search", "arguments": {"topic": "Colorado orogeny"}}]
    Observation: The Colorado orogeny was an episode of mountain building (an orogeny) ...
    Thought: It does not mention the eastern sector. So I need to look up eastern sector.
    Thought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.
    Action:
    <tool_call>[{"name": "Finish", "arguments": {"topic": "1,800 to 7,000 ft"}}]
  contribute: [context]

- "How many years ago was the discoverer of the Hudson River born? Keep in mind we are in 2025.\n"
- repeat:
    text:
    - def: thought
      model: replicate/ibm-granite/granite-3.1-8b-instruct
      parameters:
        stop_sequences: "Action:"
    - "Action:\n"
    - def: action
      model: replicate/ibm-granite/granite-3.1-8b-instruct
      parameters:
        stop_sequences: "\n"
      parser: json
    - match: ${ action[0].name }
      with:
        - case: 'Search'
          then:
            text:
            - "\nObservation: "
            - lang: python
              code: |
                import warnings, wikipedia
                warnings.simplefilter("ignore")
                try:
                  result = wikipedia.summary("${ action[0].arguments.topic }")
                except wikipedia.WikipediaException as e:
                  result = str(e)
        - case: 'Calc'
          then:
            text:
            - "\nObservation: "
            - lang: python
              code: result = ${ action[0].arguments.expr }
    - "\n"
  until: ${ action[0].name == "Finish" }