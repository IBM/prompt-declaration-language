title: Teaching PDL
prompts:
- lan: python
  code:
  - |
    print("Enter/Paste your content. Ctrl-D to save it.")
    contents = []
    while True:
      try:
        line = input()
      except EOFError:
        break
      contents.append(line + "\n")
    result = ''.join(contents)
  assign: QUERY
  show_result: false
- model: ibm/granite-20b-code-instruct-v1
  decoding: argmax
  input:
    prompts:
    - |-
      Question: Replace all arithmetic expressions by surrounding them with << >>
      Bob had 5 + 2 apples. He ate all them and bought 8 * 67 skittles.
      He wanted to distribute those among all of 10 children. So each kid
      got a grand total of 8 * 67 / 10 skittle. Amazing!

      Answer:
      Bob had << 5 + 2 >> apples. He ate all them and bought << 8 * 67 >> skittles.
      He wanted to distribute those among all of 10 children. So each kid
      got a grand total of << 8 * 67 / 10 >>  skittle. Amazing!

      Question:
      The world contains lots of soccer balls. Each team has 5 soccer balls per kid.
      This team has 30 kids, so the team has 5 * 30 soccer balls.

      Answer:
      The world contains lots of soccer balls. Each team has 5 soccer balls per kid.
      This team has 30 kids, so the team has << 5 * 30 >> soccer balls.

      Question:
      What is 5 + 2?

      Answer:
      What is << 5 + 2 >>?

      Question:

    - get: QUERY
    - "\n\n"
  assign: QUERY1
  show_result: false


- model: ibm/granite-20b-code-instruct-v1
  decoding: argmax
  input:
    prompts:
    - |-
      Question: Write the following prompts in PDL:
      Hello world!
      This is your first prompt descriptor!

      Answer:
      ```
      title: Hello world!
      prompts:
      - "Hello, world!\n"
      - "This is your first prompt descriptor!\n"      
      ```

      Question: Turn the code into PDL:
      contents = []
      while True:
      try:
        line = input()
      except EOFError:
        break
      contents.append(line + "\n")
      result = ''.join(contents)

      Answer:
      ```
      title: Example of PDL code block
      prompts:
      - lan: python
        code:
        - |
          contents = []
          while True:
          try:
            line = input()
          except EOFError:
            break
          contents.append(line + "\n")
          result = ''.join(contents)
      ```

      Question: Write the following in PDL where the parts in << >> are done in Python.
      Hello world!
      This is your << expr >> prompt descriptor!

      Answer:
      ```
      title: Hello world!
      prompts:
      - "Hello, world!\n"
      - "This is your "
      - lan: python
        code:
        - |
          result = expr
      - " prompt descriptor!"
      ```
      Question: Write the following in PDL where the parts in << >> are done in Python.
      What is << 67+ 67 - 78 + 2 >>

      Answer:
      ```
      title: Hello world!
      prompts:
      - "What is "
      - lan: python
        code:
        - |
          result = 67+ 67 - 78 + 2
      ```


      Question: Write the following in PDL with parts << >> written in Python
    - get: QUERY1
    - "\n\n"
  assign: PDL
  show_result: false

- lan: python
  code:
  - | 
    from pdl import pdl_ast, pdl_interpreter
    from pdl.pdl_ast import Program
    from pdl.pdl_interpreter import process_block
    import re
    import yaml
    s = """'
  - get: PDL
  - |
    '"""
    pdl = s.split("```")[1]
    obj = yaml.safe_load(pdl)
    scope = {}
    log = []
    data = Program.model_validate(obj)
    result = process_block(log, scope, "", data.root)
  assign: RESULT
  show_result: false

- model: ibm/granite-20b-code-instruct-v1
  decoding: argmax
  input:
    prompts:
    - get: RESULT




