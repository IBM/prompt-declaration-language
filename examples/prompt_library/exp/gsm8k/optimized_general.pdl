description: Demo of template
defs:
  model: watsonx_text/ibm/granite-13b-instruct-v2
  prompt_pattern: cot
  system_prompt: granite_llama
  num_demonstrations:
    data: 5
  demonstrations:
    data:
    - question: Mark can jump 6 inches off the ground. Lisa can jump double the height as Mark, and Jacob can jump double the height of Lisa. If James jumps 2/3 as high Jacob, how high can James jump?
      reasoning: |-
        Lisa can jump 6*2 =<<6*2=12>>12 inches.
        Jacob can jump 12 *2 = <<12*2=24>>24 inches.
        James can jump 24*(2/3)= <<24*(2/3)=16>>16 inches high.
      answer: '16'
    - question: There are 141 gold balloons and twice as many silver balloons. If the gold and silver balloons were added to 150 black balloons, how many balloons are there in total?
      reasoning: |-
        Gold = <<141=141>>141
        Silver = 141 * 2 = <<141*2=282>>282
        141 + 282 + 150 = <<141+282+150=573>>573
        There are 573 gold, silver, and black balloons in total.
      answer: '573'
    - question: There are six unicorns in the Enchanted Forest. Everywhere a unicorn steps, four flowers spring into bloom. The six unicorns are going to walk all the way across the forest side-by-side, a journey of 9 kilometers. If each unicorn moves 3 meters forward with each step, how many flowers bloom because of this trip?
      reasoning: |-
        First convert the total length of the journey from kilometers to meters: 9 kilometers * 1000 meters/kilometer = <<9*1000=9000>>9000 meters
        Then divide this by the length of one step to find the number of steps in the journey: 9000 meters / 3 meters/step = <<9000/3=3000>>3000 steps
        Then multiply the number of steps by the number of flowers per step to find how many flowers one unicorn creates on the journey: 3000 steps * 4 flowers/step = <<3000*4=12000>>12000 flowers
        Then multiply the number of flowers per unicorn by the number of unicorns to find the total number of flowers created: 12000 flowers/unicorn * 6 unicorns = 72,000 flowers
      answer: '72000'
    - question: A fisherman catches 3 types of fish in his net. There are 32 bass, 1/4 as many trout as bass, and double the number of blue gill as bass. How many fish did the fisherman catch total?
      reasoning: |-
        Bass:32
        Trout:32/4=8
        Blue Gill:2(32)=<<64=64>>64
        Total:32+8+64=<<32+8+64=104>>104 fish
      answer: '104'
    - question: If eight movie tickets cost 2 times as much as one football game ticket, and each movie ticket is sold at $30, calculate the total amount of money Chandler will pay if he buys eight movie tickets and five football game tickets.
      reasoning: |-
        If each movie ticket is sold at $30, the cost of buying eight movie tickets is 8*$30 = $<<8*30=240>>240
        Since eight movie tickets cost 2 times as much as one football game ticket, the cost of buying one football game ticket is $240/2 = $<<240/2=120>>120
        Buying five football game tickets will cost 5*$120 = $<<5*120=600>>600
        The total cost of buying eight movie tickets and five football game tickets is $600+$240 = $840
      answer: '840'
text:
- if: ${ prompt_pattern == 'cot' }
  then:
    text:
    - include: ../../CoT.pdl
    - |+
      Answer the questions to the best of your abilities.

    - call: ${ chain_of_thought }
      args:
        examples: ${ demonstrations }
        question: ${ question|trim }
        model: ${ model }
- if: ${ prompt_pattern == 'react' }
  then:
    text:
    - include: ../../tools.pdl
    - include: ../../ReAct.pdl
    - def: ANSWER
      call: ${ react }
      args:
        task: 'Question: ${ question|trim }'
        model: ${ model }
        tools: ${ tools }
        trajectories: ${ demonstrations }
    - |2-

      The answer is ${ ANSWER.answer|trim }
- if: ${ prompt_pattern == 'rewoo' }
  then:
    text:
    - include: ../../tools.pdl
    - include: ../../ReWoo.pdl
    - def: ANSWER
      call: ${ rewoo }
      args:
        task: 'Task: ${ question }'
        model: ${ model }
        tools: ${ tools }
        trajectories: ${ demonstrations }
        show_plans: false
    - |2-

      The answer is ${ ANSWER.answer|trim }
