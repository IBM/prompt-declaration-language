/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Description = string | null;
export type Description1 = string | null;
export type Description2 = string | null;
export type Description3 = string | null;
export type Description4 = string | null;
export type Description5 = string | null;
export type Description6 = string | null;
export type Description7 = string | null;
export type Description8 = string | null;
export type Description9 = string | null;
export type Description10 = string | null;
export type Description11 = string | null;
export type Description12 = string | null;
export type Description13 = string | null;
export type Description14 = string | null;
export type Description15 = string | null;
export type Def = string | null;
export type ShowResult = boolean;
export type Kind = "empty";
export type Def1 = string | null;
export type ShowResult1 = boolean;
export type Kind1 = "error";
export type Msg = string;
export type Program =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Def2 = string | null;
export type ShowResult2 = boolean;
export type Kind2 = "include";
export type Include = string;
export type Trace =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | null;
export type Def3 = string | null;
export type ShowResult3 = boolean;
export type Kind3 = "read";
export type Read = string | null;
export type Message = string | null;
export type Multiline = boolean;
export type Parser = ("json" | "yaml") | null;
export type Def4 = string | null;
export type ShowResult4 = boolean;
export type Kind4 = "document";
export type Document =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Def5 = string | null;
export type ShowResult5 = boolean;
export type Kind5 = "for";
export type Repeat =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Trace1 =
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
      | (
          | string
          | FunctionBlock
          | CallBlock
          | ModelBlock
          | CodeBlock
          | ApiBlock
          | GetBlock
          | DataBlock
          | IfBlock
          | RepeatBlock
          | RepeatUntilBlock
          | ForBlock
          | DocumentBlock
          | ReadBlock
          | IncludeBlock
          | ErrorBlock
          | EmptyBlock
        )[]
    )[]
  | null;
export type Def6 = string | null;
export type ShowResult6 = boolean;
export type Kind6 = "repeat_until";
export type Repeat1 =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Trace2 =
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
      | (
          | string
          | FunctionBlock
          | CallBlock
          | ModelBlock
          | CodeBlock
          | ApiBlock
          | GetBlock
          | DataBlock
          | IfBlock
          | RepeatBlock
          | RepeatUntilBlock
          | ForBlock
          | DocumentBlock
          | ReadBlock
          | IncludeBlock
          | ErrorBlock
          | EmptyBlock
        )[]
    )[]
  | null;
export type Def7 = string | null;
export type ShowResult7 = boolean;
export type Kind7 = "repeat";
export type Repeat2 =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type NumIterations = number;
export type Trace3 =
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
      | (
          | string
          | FunctionBlock
          | CallBlock
          | ModelBlock
          | CodeBlock
          | ApiBlock
          | GetBlock
          | DataBlock
          | IfBlock
          | RepeatBlock
          | RepeatUntilBlock
          | ForBlock
          | DocumentBlock
          | ReadBlock
          | IncludeBlock
          | ErrorBlock
          | EmptyBlock
        )[]
    )[]
  | null;
export type Def8 = string | null;
export type ShowResult8 = boolean;
export type Kind8 = "if";
export type Then =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Else =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[]
  | null;
export type IfResult = boolean | null;
export type Def9 = string | null;
export type ShowResult9 = boolean;
export type Kind9 = "data";
export type Def10 = string | null;
export type ShowResult10 = boolean;
export type Kind10 = "get";
export type Get = string;
export type Def11 = string | null;
export type ShowResult11 = boolean;
export type Kind11 = "code";
export type Lan = string;
export type Code =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Def12 = string | null;
export type ShowResult12 = boolean;
export type Kind12 = "model";
export type Model = string;
export type Input =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[]
  | null;
export type PromptId = string | null;
export type BeamWidth = number | null;
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "DecodingMethod".
 */
export type DecodingMethod = "greedy" | "sample";
export type IncludeStopSequence = boolean | null;
export type DecayFactor = number | null;
export type StartIndex = number | null;
export type MaxNewTokens = number | null;
export type MinNewTokens = number | null;
export type RandomSeed = number | null;
export type RepetitionPenalty = number | null;
export type GeneratedTokens = boolean | null;
export type InputParameters = boolean | null;
export type InputText = boolean | null;
export type InputTokens = boolean | null;
export type TokenLogprobs = boolean | null;
export type TokenRanks = boolean | null;
export type TopNTokens = number | null;
export type StopSequences =
  | [string]
  | [string, string]
  | [string, string, string]
  | [string, string, string, string]
  | [string, string, string, string, string]
  | [string, string, string, string, string, string]
  | null;
export type Temperature = number | null;
export type TimeLimit = number | null;
export type TopK = number | null;
export type TopPNucleusSampling = number | null;
export type TruncateInputTokens = number | null;
export type TypicalP = number | null;
export type Enabled = boolean | null;
export type SendTokens = boolean | null;
export type Threshold = number | null;
export type Enabled1 = boolean | null;
export type SendTokens1 = boolean | null;
export type Threshold1 = number | null;
export type Enabled2 = boolean | null;
export type SendTokens2 = boolean | null;
export type Threshold2 = number | null;
export type Enabled3 = boolean | null;
export type SendTokens3 = boolean | null;
export type Threshold3 = number | null;
export type ExampleFileIds =
  | []
  | [string]
  | [string, string]
  | [string, string, string]
  | [string, string, string, string]
  | [string, string, string, string, string]
  | null;
export type Def13 = string | null;
export type ShowResult13 = boolean;
export type Kind13 = "call";
export type Call = string;
export type Def14 = string | null;
export type ShowResult14 = boolean;
export type Kind14 = "function";
export type Function = {
  [k: string]: unknown;
} | null;
export type Return =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
export type Scope = {
  [k: string]: unknown;
} | null;
export type Def15 = string | null;
export type ShowResult15 = boolean;
export type Kind15 = "api";
export type Api = string;
export type Url = string;
export type Input1 =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "PdlBlock".
 */
export type PdlBlock =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock;
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "PdlBlocks".
 */
export type PdlBlocks =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock
  | (
      | string
      | FunctionBlock
      | CallBlock
      | ModelBlock
      | CodeBlock
      | ApiBlock
      | GetBlock
      | DataBlock
      | IfBlock
      | RepeatBlock
      | RepeatUntilBlock
      | ForBlock
      | DocumentBlock
      | ReadBlock
      | IncludeBlock
      | ErrorBlock
      | EmptyBlock
    )[];
/**
 * Prompt Description Program (PDL)
 *
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "Program".
 */
export type Program1 =
  | string
  | FunctionBlock
  | CallBlock
  | ModelBlock
  | CodeBlock
  | ApiBlock
  | GetBlock
  | DataBlock
  | IfBlock
  | RepeatBlock
  | RepeatUntilBlock
  | ForBlock
  | DocumentBlock
  | ReadBlock
  | IncludeBlock
  | ErrorBlock
  | EmptyBlock;

export interface PDLSchemas {
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ApiBlock".
 */
export interface ApiBlock {
  description?: Description;
  spec?: Spec;
  defs?: Defs;
  def?: Def15;
  show_result?: ShowResult15;
  result?: unknown;
  kind?: Kind15;
  api: Api;
  url: Url;
  input: Input1;
}
export interface Spec {
  [k: string]: unknown;
}
export interface Defs {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "FunctionBlock".
 */
export interface FunctionBlock {
  description?: Description1;
  spec?: Spec1;
  defs?: Defs1;
  def?: Def14;
  show_result?: ShowResult14;
  result?: unknown;
  kind?: Kind14;
  function: Function;
  return: Return;
  scope?: Scope;
}
export interface Spec1 {
  [k: string]: unknown;
}
export interface Defs1 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "CallBlock".
 */
export interface CallBlock {
  description?: Description2;
  spec?: Spec2;
  defs?: Defs2;
  def?: Def13;
  show_result?: ShowResult13;
  result?: unknown;
  kind?: Kind13;
  call: Call;
  args?: Args;
}
export interface Spec2 {
  [k: string]: unknown;
}
export interface Defs2 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModelBlock".
 */
export interface ModelBlock {
  description?: Description3;
  spec?: Spec3;
  defs?: Defs3;
  def?: Def12;
  show_result?: ShowResult12;
  result?: unknown;
  kind?: Kind12;
  model: Model;
  input?: Input;
  prompt_id?: PromptId;
  parameters?: PDLTextGenerationParameters | null;
  moderations?: ModerationParameters | null;
  data?: PromptTemplateData | null;
  constraints?: Constraints;
}
export interface Spec3 {
  [k: string]: unknown;
}
export interface Defs3 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  description?: Description4;
  spec?: Spec4;
  defs?: Defs4;
  def?: Def11;
  show_result?: ShowResult11;
  result?: unknown;
  kind?: Kind11;
  lan: Lan;
  code: Code;
}
export interface Spec4 {
  [k: string]: unknown;
}
export interface Defs4 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "GetBlock".
 */
export interface GetBlock {
  description?: Description5;
  spec?: Spec5;
  defs?: Defs5;
  def?: Def10;
  show_result?: ShowResult10;
  result?: unknown;
  kind?: Kind10;
  get: Get;
}
export interface Spec5 {
  [k: string]: unknown;
}
export interface Defs5 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "DataBlock".
 */
export interface DataBlock {
  description?: Description6;
  spec?: Spec6;
  defs?: Defs6;
  def?: Def9;
  show_result?: ShowResult9;
  result?: unknown;
  kind?: Kind9;
  data: Data;
}
export interface Spec6 {
  [k: string]: unknown;
}
export interface Defs6 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "IfBlock".
 */
export interface IfBlock {
  description?: Description7;
  spec?: Spec7;
  defs?: Defs7;
  def?: Def8;
  show_result?: ShowResult8;
  result?: unknown;
  kind?: Kind8;
  if: If;
  then: Then;
  else?: Else;
  if_result?: IfResult;
}
export interface Spec7 {
  [k: string]: unknown;
}
export interface Defs7 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "RepeatBlock".
 */
export interface RepeatBlock {
  description?: Description8;
  spec?: Spec8;
  defs?: Defs8;
  def?: Def7;
  show_result?: ShowResult7;
  result?: unknown;
  kind?: Kind7;
  repeat: Repeat2;
  num_iterations: NumIterations;
  trace?: Trace3;
}
export interface Spec8 {
  [k: string]: unknown;
}
export interface Defs8 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "RepeatUntilBlock".
 */
export interface RepeatUntilBlock {
  description?: Description9;
  spec?: Spec9;
  defs?: Defs9;
  def?: Def6;
  show_result?: ShowResult6;
  result?: unknown;
  kind?: Kind6;
  repeat: Repeat1;
  until: Until;
  trace?: Trace2;
}
export interface Spec9 {
  [k: string]: unknown;
}
export interface Defs9 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ForBlock".
 */
export interface ForBlock {
  description?: Description10;
  spec?: Spec10;
  defs?: Defs10;
  def?: Def5;
  show_result?: ShowResult5;
  result?: unknown;
  kind?: Kind5;
  for: For;
  repeat: Repeat;
  trace?: Trace1;
}
export interface Spec10 {
  [k: string]: unknown;
}
export interface Defs10 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "DocumentBlock".
 */
export interface DocumentBlock {
  description?: Description11;
  spec?: Spec11;
  defs?: Defs11;
  def?: Def4;
  show_result?: ShowResult4;
  result?: unknown;
  kind?: Kind4;
  document: Document;
}
export interface Spec11 {
  [k: string]: unknown;
}
export interface Defs11 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ReadBlock".
 */
export interface ReadBlock {
  description?: Description12;
  spec?: Spec12;
  defs?: Defs12;
  def?: Def3;
  show_result?: ShowResult3;
  result?: unknown;
  kind?: Kind3;
  read: Read;
  message?: Message;
  multiline?: Multiline;
  parser?: Parser;
}
export interface Spec12 {
  [k: string]: unknown;
}
export interface Defs12 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "IncludeBlock".
 */
export interface IncludeBlock {
  description?: Description13;
  spec?: Spec13;
  defs?: Defs13;
  def?: Def2;
  show_result?: ShowResult2;
  result?: unknown;
  kind?: Kind2;
  include: Include;
  trace?: Trace;
}
export interface Spec13 {
  [k: string]: unknown;
}
export interface Defs13 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ErrorBlock".
 */
export interface ErrorBlock {
  description?: Description14;
  spec?: Spec14;
  defs?: Defs14;
  def?: Def1;
  show_result?: ShowResult1;
  result?: unknown;
  kind?: Kind1;
  msg: Msg;
  program: Program;
}
export interface Spec14 {
  [k: string]: unknown;
}
export interface Defs14 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "EmptyBlock".
 */
export interface EmptyBlock {
  description?: Description15;
  spec?: Spec15;
  defs?: Defs15;
  def?: Def;
  show_result?: ShowResult;
  result?: unknown;
  kind?: Kind;
}
export interface Spec15 {
  [k: string]: unknown;
}
export interface Defs15 {
  [k: string]:
    | string
    | FunctionBlock
    | CallBlock
    | ModelBlock
    | CodeBlock
    | ApiBlock
    | GetBlock
    | DataBlock
    | IfBlock
    | RepeatBlock
    | RepeatUntilBlock
    | ForBlock
    | DocumentBlock
    | ReadBlock
    | IncludeBlock
    | ErrorBlock
    | EmptyBlock
    | (
        | string
        | FunctionBlock
        | CallBlock
        | ModelBlock
        | CodeBlock
        | ApiBlock
        | GetBlock
        | DataBlock
        | IfBlock
        | RepeatBlock
        | RepeatUntilBlock
        | ForBlock
        | DocumentBlock
        | ReadBlock
        | IncludeBlock
        | ErrorBlock
        | EmptyBlock
      )[];
}
export interface For {
  [k: string]: unknown;
}
export interface Until {
  [k: string]: unknown;
}
export interface If {
  [k: string]: unknown;
}
export interface Data {
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "PDLTextGenerationParameters".
 */
export interface PDLTextGenerationParameters {
  beam_width?: BeamWidth;
  decoding_method?: DecodingMethod | null;
  include_stop_sequence?: IncludeStopSequence;
  length_penalty?: LengthPenalty | null;
  max_new_tokens?: MaxNewTokens;
  min_new_tokens?: MinNewTokens;
  random_seed?: RandomSeed;
  repetition_penalty?: RepetitionPenalty;
  return_options?: TextGenerationReturnOptions | null;
  stop_sequences?: StopSequences;
  temperature?: Temperature;
  time_limit?: TimeLimit;
  top_k?: TopK;
  top_p?: TopPNucleusSampling;
  truncate_input_tokens?: TruncateInputTokens;
  typical_p?: TypicalP;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "LengthPenalty".
 */
export interface LengthPenalty {
  decay_factor?: DecayFactor;
  start_index?: StartIndex;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "TextGenerationReturnOptions".
 */
export interface TextGenerationReturnOptions {
  generated_tokens?: GeneratedTokens;
  input_parameters?: InputParameters;
  input_text?: InputText;
  input_tokens?: InputTokens;
  token_logprobs?: TokenLogprobs;
  token_ranks?: TokenRanks;
  top_n_tokens?: TopNTokens;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationParameters".
 */
export interface ModerationParameters {
  hap?: ModerationHAP | null;
  social_bias?: ModerationSocialBias | null;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationHAP".
 */
export interface ModerationHAP {
  input?: ModerationHAPInput | null;
  output?: ModerationHAPOutput | null;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationHAPInput".
 */
export interface ModerationHAPInput {
  enabled?: Enabled;
  send_tokens?: SendTokens;
  threshold?: Threshold;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationHAPOutput".
 */
export interface ModerationHAPOutput {
  enabled?: Enabled1;
  send_tokens?: SendTokens1;
  threshold?: Threshold1;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationSocialBias".
 */
export interface ModerationSocialBias {
  input?: ModerationSocialBiasInput | null;
  output?: ModerationSocialBiasOutput | null;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationSocialBiasInput".
 */
export interface ModerationSocialBiasInput {
  enabled?: Enabled2;
  send_tokens?: SendTokens2;
  threshold?: Threshold2;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "ModerationSocialBiasOutput".
 */
export interface ModerationSocialBiasOutput {
  enabled?: Enabled3;
  send_tokens?: SendTokens3;
  threshold?: Threshold3;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `PDLSchemas`'s JSON-Schema
 * via the `definition` "PromptTemplateData".
 */
export interface PromptTemplateData {
  example_file_ids?: ExampleFileIds;
  [k: string]: unknown;
}
export interface Constraints {
  [k: string]: unknown;
}
export interface Args {
  [k: string]: unknown;
}
