name: 'Publish ui to GitHub release'

on:
  release:
    types:
      - released
  workflow_dispatch:

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target universal-apple-darwin'
          #- platform: 'ubuntu-22.04-arm' # for Tauri v1 you could replace this with ubuntu-20.04.
          #  args: '--target aarch64-unknown-linux-gnu' # <-- The system library `gdk-3.0` required by crate `gdk-sys` was not found.
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: '--target x86_64-unknown-linux-gnu'
          #- platform: 'windows-latest'
          #  args: ''

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./pdl-live-react
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

#      - name: install Rust stable
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
#          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (mac only)
        if: matrix.platform == 'macos-latest' # This must match the platform value defined above.
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
          
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev
          rustup target add aarch64-unknown-linux-gnu
          rustup target add x86_64-unknown-linux-gnu
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm ci # change this to npm, pnpm or bun depending on which one you use.

      - name: prep interpreter
        run: npm run prep-interpreter

      - name: Install wget for Windows
        if: matrix.os == 'windows-latest'
        run: choco install wget --no-progress

      - name: download tauri-action
        run: |
          mkdir tauri-action && cd tauri-action
          mkdir dist && cd dist
          wget https://raw.githubusercontent.com/tauri-apps/tauri-action/refs/heads/dev/dist/index.js
          wget https://raw.githubusercontent.com/tauri-apps/tauri-action/refs/heads/dev/dist/package.json
          cd ..
          wget https://raw.githubusercontent.com/tauri-apps/tauri-action/refs/heads/dev/action.yml
          cd ..
          find tauri-action
          
#      - uses: tauri-apps/tauri-action@v0
      - uses: ./pdl-live-react/tauri-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Version __VERSION__ (ui build test)'
          args: ${{ matrix.args }}
